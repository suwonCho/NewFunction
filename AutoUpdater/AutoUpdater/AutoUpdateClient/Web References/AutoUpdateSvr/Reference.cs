//------------------------------------------------------------------------------
// <auto-generated>
//     이 코드는 도구를 사용하여 생성되었습니다.
//     런타임 버전:4.0.30319.42000
//
//     파일 내용을 변경하면 잘못된 동작이 발생할 수 있으며, 코드를 다시 생성하면
//     이러한 변경 내용이 손실됩니다.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 이 소스 코드가 Microsoft.VSDesigner, 버전 4.0.30319.42000에서 자동으로 생성되었습니다.
// 
#pragma warning disable 1591

namespace AutoUpdateClient.AutoUpdateSvr {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AutoUpdateServerSoap", Namespace="http://tempuri.org/")]
    public partial class AutoUpdateServer : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateDataSet_ReqOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDataSet_Schema_UploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback FileUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_FileStreamGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_FileStreamGet2OperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_FileLengthGetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AutoUpdateServer() {
            this.Url = global::AutoUpdateClient.Properties.Settings.Default.AutoUpdateClient_AutoUpdateSvr_AutoUpdateServer;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateDataSet_ReqCompletedEventHandler UpdateDataSet_ReqCompleted;
        
        /// <remarks/>
        public event UpdateDataSet_Schema_UploadCompletedEventHandler UpdateDataSet_Schema_UploadCompleted;
        
        /// <remarks/>
        public event FileDeleteCompletedEventHandler FileDeleteCompleted;
        
        /// <remarks/>
        public event FileUploadCompletedEventHandler FileUploadCompleted;
        
        /// <remarks/>
        public event Update_FileStreamGetCompletedEventHandler Update_FileStreamGetCompleted;
        
        /// <remarks/>
        public event Update_FileStreamGet2CompletedEventHandler Update_FileStreamGet2Completed;
        
        /// <remarks/>
        public event Update_FileLengthGetCompletedEventHandler Update_FileLengthGetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDataSet_Req", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UpdateDataSet_Req(string updateType) {
            object[] results = this.Invoke("UpdateDataSet_Req", new object[] {
                        updateType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDataSet_ReqAsync(string updateType) {
            this.UpdateDataSet_ReqAsync(updateType, null);
        }
        
        /// <remarks/>
        public void UpdateDataSet_ReqAsync(string updateType, object userState) {
            if ((this.UpdateDataSet_ReqOperationCompleted == null)) {
                this.UpdateDataSet_ReqOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataSet_ReqOperationCompleted);
            }
            this.InvokeAsync("UpdateDataSet_Req", new object[] {
                        updateType}, this.UpdateDataSet_ReqOperationCompleted, userState);
        }
        
        private void OnUpdateDataSet_ReqOperationCompleted(object arg) {
            if ((this.UpdateDataSet_ReqCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataSet_ReqCompleted(this, new UpdateDataSet_ReqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDataSet_Schema_Upload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateDataSet_Schema_Upload(string updateType, System.Data.DataSet ds) {
            this.Invoke("UpdateDataSet_Schema_Upload", new object[] {
                        updateType,
                        ds});
        }
        
        /// <remarks/>
        public void UpdateDataSet_Schema_UploadAsync(string updateType, System.Data.DataSet ds) {
            this.UpdateDataSet_Schema_UploadAsync(updateType, ds, null);
        }
        
        /// <remarks/>
        public void UpdateDataSet_Schema_UploadAsync(string updateType, System.Data.DataSet ds, object userState) {
            if ((this.UpdateDataSet_Schema_UploadOperationCompleted == null)) {
                this.UpdateDataSet_Schema_UploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDataSet_Schema_UploadOperationCompleted);
            }
            this.InvokeAsync("UpdateDataSet_Schema_Upload", new object[] {
                        updateType,
                        ds}, this.UpdateDataSet_Schema_UploadOperationCompleted, userState);
        }
        
        private void OnUpdateDataSet_Schema_UploadOperationCompleted(object arg) {
            if ((this.UpdateDataSet_Schema_UploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDataSet_Schema_UploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileDelete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FileDelete(string updateType, string fileName) {
            this.Invoke("FileDelete", new object[] {
                        updateType,
                        fileName});
        }
        
        /// <remarks/>
        public void FileDeleteAsync(string updateType, string fileName) {
            this.FileDeleteAsync(updateType, fileName, null);
        }
        
        /// <remarks/>
        public void FileDeleteAsync(string updateType, string fileName, object userState) {
            if ((this.FileDeleteOperationCompleted == null)) {
                this.FileDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileDeleteOperationCompleted);
            }
            this.InvokeAsync("FileDelete", new object[] {
                        updateType,
                        fileName}, this.FileDeleteOperationCompleted, userState);
        }
        
        private void OnFileDeleteOperationCompleted(object arg) {
            if ((this.FileDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FileUpload", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FileUpload(string updateType, System.Data.DataTable dt, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] filedata, int filedatalength, long fileLenth, long fileIdx, int key) {
            object[] results = this.Invoke("FileUpload", new object[] {
                        updateType,
                        dt,
                        filedata,
                        filedatalength,
                        fileLenth,
                        fileIdx,
                        key});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FileUploadAsync(string updateType, System.Data.DataTable dt, byte[] filedata, int filedatalength, long fileLenth, long fileIdx, int key) {
            this.FileUploadAsync(updateType, dt, filedata, filedatalength, fileLenth, fileIdx, key, null);
        }
        
        /// <remarks/>
        public void FileUploadAsync(string updateType, System.Data.DataTable dt, byte[] filedata, int filedatalength, long fileLenth, long fileIdx, int key, object userState) {
            if ((this.FileUploadOperationCompleted == null)) {
                this.FileUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFileUploadOperationCompleted);
            }
            this.InvokeAsync("FileUpload", new object[] {
                        updateType,
                        dt,
                        filedata,
                        filedatalength,
                        fileLenth,
                        fileIdx,
                        key}, this.FileUploadOperationCompleted, userState);
        }
        
        private void OnFileUploadOperationCompleted(object arg) {
            if ((this.FileUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FileUploadCompleted(this, new FileUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_FileStreamGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Update_FileStreamGet(string updateType, string filename) {
            object[] results = this.Invoke("Update_FileStreamGet", new object[] {
                        updateType,
                        filename});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Update_FileStreamGetAsync(string updateType, string filename) {
            this.Update_FileStreamGetAsync(updateType, filename, null);
        }
        
        /// <remarks/>
        public void Update_FileStreamGetAsync(string updateType, string filename, object userState) {
            if ((this.Update_FileStreamGetOperationCompleted == null)) {
                this.Update_FileStreamGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_FileStreamGetOperationCompleted);
            }
            this.InvokeAsync("Update_FileStreamGet", new object[] {
                        updateType,
                        filename}, this.Update_FileStreamGetOperationCompleted, userState);
        }
        
        private void OnUpdate_FileStreamGetOperationCompleted(object arg) {
            if ((this.Update_FileStreamGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_FileStreamGetCompleted(this, new Update_FileStreamGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_FileStreamGet2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Update_FileStreamGet2(string updateType, string filename, int index) {
            object[] results = this.Invoke("Update_FileStreamGet2", new object[] {
                        updateType,
                        filename,
                        index});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Update_FileStreamGet2Async(string updateType, string filename, int index) {
            this.Update_FileStreamGet2Async(updateType, filename, index, null);
        }
        
        /// <remarks/>
        public void Update_FileStreamGet2Async(string updateType, string filename, int index, object userState) {
            if ((this.Update_FileStreamGet2OperationCompleted == null)) {
                this.Update_FileStreamGet2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_FileStreamGet2OperationCompleted);
            }
            this.InvokeAsync("Update_FileStreamGet2", new object[] {
                        updateType,
                        filename,
                        index}, this.Update_FileStreamGet2OperationCompleted, userState);
        }
        
        private void OnUpdate_FileStreamGet2OperationCompleted(object arg) {
            if ((this.Update_FileStreamGet2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_FileStreamGet2Completed(this, new Update_FileStreamGet2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Update_FileLengthGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Update_FileLengthGet(string updateType, string filename) {
            object[] results = this.Invoke("Update_FileLengthGet", new object[] {
                        updateType,
                        filename});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Update_FileLengthGetAsync(string updateType, string filename) {
            this.Update_FileLengthGetAsync(updateType, filename, null);
        }
        
        /// <remarks/>
        public void Update_FileLengthGetAsync(string updateType, string filename, object userState) {
            if ((this.Update_FileLengthGetOperationCompleted == null)) {
                this.Update_FileLengthGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_FileLengthGetOperationCompleted);
            }
            this.InvokeAsync("Update_FileLengthGet", new object[] {
                        updateType,
                        filename}, this.Update_FileLengthGetOperationCompleted, userState);
        }
        
        private void OnUpdate_FileLengthGetOperationCompleted(object arg) {
            if ((this.Update_FileLengthGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_FileLengthGetCompleted(this, new Update_FileLengthGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateDataSet_ReqCompletedEventHandler(object sender, UpdateDataSet_ReqCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDataSet_ReqCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDataSet_ReqCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void UpdateDataSet_Schema_UploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void FileDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void FileUploadCompletedEventHandler(object sender, FileUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FileUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FileUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Update_FileStreamGetCompletedEventHandler(object sender, Update_FileStreamGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_FileStreamGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_FileStreamGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Update_FileStreamGet2CompletedEventHandler(object sender, Update_FileStreamGet2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_FileStreamGet2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_FileStreamGet2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void Update_FileLengthGetCompletedEventHandler(object sender, Update_FileLengthGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Update_FileLengthGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Update_FileLengthGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591